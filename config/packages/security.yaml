security:
    encoders:
        legacy:
            algorithm: md5
            encode_as_base64: false
            iterations: 1
        App\Entity\Utilisateur:
            algorithm: bcrypt
            migrate_from:
                - bcrypt # uses the "bcrypt" encoder with the default options
                - legacy # uses the "legacy" encoder configured above
    # https://symfony.com/doc/current/security.html#where-do-users-come-from-user-providers
    providers:
        users_in_memory: { memory: null }
        my_database:
            entity:
                class: App\Entity\Utilisateur
                property: username
    firewalls:
        dev:
            pattern: ^/(_(profiler|wdt)|css|images|js)/
            security: false
        main:
            anonymous: lazy
            provider: my_database
            

            form_login:
                login_path: security_login
                check_path: security_login


            logout:
                path: security_logout
                target: security_login


            # activate different ways to authenticate
            # https://symfony.com/doc/current/security.html#firewalls-authentication

            # https://symfony.com/doc/current/security/impersonating_user.html
            # switch_user: true

    # Easy way to control access for large sections of your site
    # Note: Only the *first* access control that matches will be used
    role_hierarchy:
        ROLE_USER: [ROLE_CLIENT]
        ROLE_ADMIN: [ROLE_ADMIN]
    access_control:
         - { path: ^/inscription, roles: [ROLE_ADMIN,ROLE_USER,IS_AUTHENTICATED_ANONYMOUSLY] }
         - { path: ^/connexion, roles: [ROLE_ADMIN,ROLE_USER,IS_AUTHENTICATED_ANONYMOUSLY] } 
         - { path: ^/utilisateurFront, roles: [ROLE_ADMIN,ROLE_USER,IS_AUTHENTICATED_ANONYMOUSLY] } 
         - { path: ^/utilisateur, roles: [ROLE_ADMIN] } 
         
        
